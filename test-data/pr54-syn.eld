(((toplevel . 1))
 (((block-start begin)
   . 1)
  ((defun-start "foo_1")
   . 1))
 (((in-begin-block defun "foo_1")
   . 40))
 (((block-end defun "foo_1")
   . 40)
  ((in-begin-block defun "foo_1")
   . 40))
 ((toplevel . 1))
 ((toplevel . 1))
 (((in-begin-block defun "foo_2")
   . 99))
 (((block-end defun "foo_2")
   . 99)
  ((in-begin-block defun "foo_2")
   . 99))
 ((toplevel . 1))
 ((toplevel . 1))
 (((block-start is-or-as)
   . 197)
  ((defun-start "foo_3")
   . 197))
 (((in-begin-block defun "foo_3")
   . 236))
 (((block-end defun "foo_3")
   . 236)
  ((in-begin-block defun "foo_3")
   . 236))
 ((toplevel . 1))
 ((toplevel . 1))
 (((block-start is-or-as)
   . 262)
  ((defun-start "foo_4")
   . 262))
 (((block-start begin)
   . 262)
  ((defun-start "foo_4")
   . 262))
 (((in-begin-block defun "foo_4")
   . 301))
 (((block-end defun "foo_4")
   . 301)
  ((in-begin-block defun "foo_4")
   . 301))
 ((toplevel . 1))
 ((toplevel . 1))
 ((toplevel . 1))
 ((comment-start . 1)
  (toplevel . 1))
 ((comment-start . 1)
  (toplevel . 1))
 ((comment-start . 1)
  (toplevel . 1))
 ((comment-start . 1)
  (toplevel . 1))
 ((comment-start . 1)
  (toplevel . 1))
 ((comment-start . 1)
  (toplevel . 1))
 ((comment-start . 1)
  (toplevel . 1))
 ((toplevel . 1)))
 